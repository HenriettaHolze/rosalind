#Transitions and Transversions

#transition: A <-> G, C <-> T
#transversion: A <-> C, G <-> T, GC, AT

fasta = '''>Rosalind_6709
AAGACAGGACAAGCGTTTCAGGGAGATGCCTAGAAATCCCGCCTCTGACCGAATTAGACA
GCATGATCTTCACTTGGTATAGTATTTCGGGCGGGTCAAGTCATCGGCCGATTAATGGCT
GAATGCATCCTGCCACAGACGAATTAGGGGCACAGCCTTTCGCTGCCCGGAGCCGTTCAA
ACCTCCCACAGAGGGGAACGGGTATTAGGGTATGGACGTAACTTCGAACGCGTCACCTCT
TTGGCCGAGCCAGCATACCATCCAATCCGGCCAATCCGTCCACGAAACTATAGTGCGGAG
TAAGAGCACCAGTGGCAGCCGGCGTGGGGTGGGAAAGCGGCCCTCACTAGTACTTGACAA
GACGCGCTCATCATATAGTTTCCAGGCGCGCACTCTACGCTCCACTATATTCTTATGCAC
ATTGTATGAGCGAGTTCCTGTGTGTGCCGGTGGAAGTAAGTGAAAGGCTAACGCAACACA
CAAACGGGCCTAACGCAATTAGCAGATAGGGATTGAGTTTTTGAGACACGAATGCGAATA
GAGTATTTCCCTTGTTCAGCGGACCTGCGACGTATTTCGCCTATGTCAACCTATACCCCA
GTGTTTAACTCGGCTATGCCAGTTGGAGATACGACGTATTTTTCTACCGTGCCCATATGA
GGCTAGTGTACTATGATAAGGGGATTTCTCAAATATTCATTTATGGCACATATCTTAATG
GCTGGGAACAAGCTTTGACAGGTCGAACGGGTTAAGAAGATCCTAGAACAGGCTAGCCAC
CGTTTGCTGGCTTATCATCTCACTTTATAGGAAGTCTTTTCGAGTGTTTTACATGGCCTG
GGCATAAAACCGATTGGCTGATCGCCCGATTCGGCGCTCGAAACAATCACTCTATAGTGA
AACCCCGTACCCTTCCGAATTAACTTCATTCACGTTAATAGAACTAAGCAAAGCCTTCTA
CATTATTTGTTAAAACACACGCAAT
>Rosalind_9091
AAAACAAGAATGGCGTGTCGGAGAGGTATCGAAAAATCCCGCTTTCAGACGCATTGAACG
GATTGATTCTCACTCGGCCTGGCAATTCGAGCACGCTAACTCTCCAGCCGGTTGATGGCT
GAATCTACCCGGCTGCAGGCGAGTTAGGGGCCCGGCCTTCCGCTGCCCGGAGCCGTTCGA
ACTTTCCACAGAAGGGGACAACAATTAAGGCATGGACGCATCTCCGAATGCACCACGTCT
TTGGCCAGACTAGCTTACTGCCCAATCCAGCCAATTCGCCCACTGAACTATAGTGTGGAG
TAAATGCATCAGGGGCAGTAGATGCGAAGTGGATAAGCGGCCCTGACCGGTTTTTGACAT
TGTGCGCCGATTATACGGTCTGCAAGCGCGCTATCTTCACTCCCGGATATTTTTATGTAT
ACAGTGTAATCGGGCTCCTGTGTGCGCCTGTTGACGTCAATAGAAGGTTAGCACAACACA
CAAAGGGTCCTGGTGCCATTAGGAGATAGGTAACGATGCTTTGAGACGCGAATGTTAATG
GAGCATCGCCCTCGATCAATGGACTGACGACATACTCCCCCTACGCCAACTGACAATCAG
TTGTTTAACTTGGCGGGACCAGCTGAAGTTAAGACGTGTTCCTCTACGATACTCCTATAA
GGGTAGTGTACTATGTTAGGGGGTTTACACATACATTAACTTATGACACATATTTTAATT
ACCGGGAATGAGCACGGACAAGTCAAACGGGCCAGAAAGATCCTGGAAGAAACTAGCTAC
GGTTTGCTCGCTGGTTATTTCACCCTATAGACAATGCCGTCGAGTACTTCACTTGATCTA
GTTATAAACCTGATTCACGGATGGCACGATTTGACCGCAGAGGCGATTACTCTATAGTAA
AACACTGTACTCTTCTGAACTAACTTCATTCATATCAGTAAAACTGGGTTAAGTCTCCTA
CATCATTTGTTAGAATACACGCTGT'''

def fasta_into_dict(fasta):
    fasta_list = fasta.split()
    fasta_dict = {}
    for line in fasta_list:
        if line[0] == '>':
            header = line[1:]
            fasta_dict[header] = []
        else:
            fasta_dict[header].append(line[:])  #creates list within value {'header': ['ABS', 'ABC']}
    for header in fasta_dict:
        fasta_dict[header] = ''.join(fasta_dict[header])
    return fasta_dict

fasta_dict = fasta_into_dict(fasta)

sequence_list = []
for header, sequence in fasta_dict.items():
    sequence_list.append(sequence)

a = sequence_list[0]
b = sequence_list[1]



trns = 0
trnv = 0

for i in range(len(a)):
    if a[i] != b[i]:
        if a[i] == 'A':
            if b[i] == 'G':
                trns += 1
            else:
                trnv += 1
        if a[i] == 'T':
            if b[i] == 'C':
                trns += 1
            else:
                trnv += 1
        if a[i] == 'C':
            if b[i] == 'T':
                trns += 1
            else:
                trnv += 1
        if a[i] == 'G':
            if b[i] == 'A':
                trns += 1
            else:
                trnv += 1


ratio = trns / trnv
print(ratio)
